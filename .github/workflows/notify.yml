name: GitHub to Telegram Notifications

on:
  push:
  pull_request:
  issues:
  issue_comment:
  release:
  create:
  delete:
  discussion_comment:
  workflow_dispatch:
  repository_dispatch:
  fork:
  watch:

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
    - name: Send Telegram Notification
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        EVENT_NAME="$GITHUB_EVENT_NAME"
        ACTION="${{ github.event.action }}"
        ACTOR="${{ github.actor }}"
        REPO="${{ github.repository }}"

        # Default URL fallback
        EVENT_URL="https://github.com/${REPO}"

        # Try to extract useful URL from known types
        if [ -n "${{ github.event.head_commit.url }}" ]; then
          EVENT_URL="${{ github.event.head_commit.url }}"
        elif [ -n "${{ github.event.pull_request.html_url }}" ]; then
          EVENT_URL="${{ github.event.pull_request.html_url }}"
        elif [ -n "${{ github.event.issue.html_url }}" ]; then
          EVENT_URL="${{ github.event.issue.html_url }}"
        elif [ -n "${{ github.event.comment.html_url }}" ]; then
          EVENT_URL="${{ github.event.comment.html_url }}"
        elif [ -n "${{ github.event.release.html_url }}" ]; then
          EVENT_URL="${{ github.event.release.html_url }}"
        elif [ -n "${{ github.event.discussion.html_url }}" ]; then
          EVENT_URL="${{ github.event.discussion.html_url }}"
        fi

        MSG="üöÄ *GitHub Action Report*\n\n*Event:* ${EVENT_NAME}\n*Action:* ${ACTION}\n*Repo:* ${REPO}\n*By:* ${ACTOR}\n\n[üîó View on GitHub](${EVENT_URL})"

        curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage \
          -d chat_id="${TELEGRAM_CHAT_ID}" \
          -d text="${MSG}" \
          -d parse_mode=Markdown || echo "‚ùå Failed to send Telegram message"
